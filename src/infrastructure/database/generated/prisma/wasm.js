
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.BancosScalarFieldEnum = {
  id: 'id',
  codbanco: 'codbanco',
  instituicao: 'instituicao',
  segmento: 'segmento',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ConfiguracaoScalarFieldEnum = {
  id: 'id',
  descricao: 'descricao',
  config: 'config',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ConsultasScalarFieldEnum = {
  id: 'id',
  datahora: 'datahora',
  id_servico: 'id_servico',
  beneficio: 'beneficio',
  cpf: 'cpf',
  qtde: 'qtde',
  id_usuario: 'id_usuario',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  tipotransacao: 'tipotransacao',
  observacao: 'observacao',
  valor_unit: 'valor_unit',
  matricula_siape: 'matricula_siape',
  tp_serv_origem: 'tp_serv_origem',
  id_extrato_off: 'id_extrato_off',
  origem_sol: 'origem_sol'
};

exports.Prisma.ConsultasofflineScalarFieldEnum = {
  id: 'id',
  idConsulta: 'idConsulta',
  erroID: 'erroID',
  idStatusSolicitacaoIn100: 'idStatusSolicitacaoIn100',
  situacao: 'situacao',
  resultado: 'resultado',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ConsultasofflinesiapeScalarFieldEnum = {
  id: 'id',
  idConsulta: 'idConsulta',
  situacao: 'situacao',
  erroID: 'erroID',
  resultado: 'resultado',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CreditoScalarFieldEnum = {
  id: 'id',
  datahora: 'datahora',
  valorun: 'valorun',
  vendedor: 'vendedor',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  idusu_cli: 'idusu_cli',
  tiposervico: 'tiposervico',
  qtdecreditos: 'qtdecreditos',
  qtderestante: 'qtderestante',
  qtdeutilizada: 'qtdeutilizada'
};

exports.Prisma.DesbloqueiosScalarFieldEnum = {
  id: 'id',
  datahora: 'datahora',
  beneficio: 'beneficio',
  cpf: 'cpf',
  protocolo: 'protocolo',
  requerente: 'requerente',
  unidade: 'unidade',
  status: 'status',
  id_usuario: 'id_usuario',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  id_usu_desbloqueio: 'id_usu_desbloqueio',
  ddb: 'ddb'
};

exports.Prisma.EntrantesinssScalarFieldEnum = {
  id: 'id',
  cpf: 'cpf',
  nome: 'nome',
  nascimento: 'nascimento',
  idade: 'idade',
  beneficio: 'beneficio',
  especie: 'especie',
  salario: 'salario',
  dib: 'dib',
  cidade: 'cidade',
  uf: 'uf',
  bairro: 'bairro',
  cep: 'cep',
  fone: 'fone',
  fone1: 'fone1',
  fone2: 'fone2',
  fone3: 'fone3',
  fone4: 'fone4',
  fone5: 'fone5',
  fone6: 'fone6',
  fone7: 'fone7',
  fone8: 'fone8',
  fone9: 'fone9',
  email: 'email',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EspeciebeneficioScalarFieldEnum = {
  id: 'id',
  codigo: 'codigo',
  descEspecieBeneficio: 'descEspecieBeneficio',
  gruposEspecie: 'gruposEspecie',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ExtratoofflineScalarFieldEnum = {
  id: 'id',
  cpf: 'cpf',
  beneficio: 'beneficio',
  jsonResult: 'jsonResult',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  idFornecedor: 'idFornecedor',
  idConsulta: 'idConsulta',
  idUsuario: 'idUsuario'
};

exports.Prisma.ExtratoonlineScalarFieldEnum = {
  id: 'id',
  idConsulta: 'idConsulta',
  id_fornecedor: 'id_fornecedor',
  beneficio: 'beneficio',
  jsonResult: 'jsonResult',
  filePdf: 'filePdf',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  isCache: 'isCache',
  statusConsulta: 'statusConsulta',
  idConsultaOffline: 'idConsultaOffline',
  errorResult: 'errorResult',
  idUsuario: 'idUsuario'
};

exports.Prisma.FornecedorScalarFieldEnum = {
  id: 'id',
  descricao: 'descricao',
  cnpj: 'cnpj',
  logradouro: 'logradouro',
  numero: 'numero',
  complemento: 'complemento',
  cep: 'cep',
  cidade: 'cidade',
  estado: 'estado',
  apikey: 'apikey',
  ativo: 'ativo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  urlapi: 'urlapi',
  usuarioApi: 'usuarioApi',
  senhaApi: 'senhaApi',
  dataHoraValidacaoApiKey: 'dataHoraValidacaoApiKey'
};

exports.Prisma.FornecedorservicoScalarFieldEnum = {
  id: 'id',
  idServico: 'idServico',
  idFornecedor: 'idFornecedor',
  ativo: 'ativo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.HistoricoconsultaapiScalarFieldEnum = {
  id: 'id',
  idservico: 'idservico',
  idfornecedor: 'idfornecedor',
  cpf: 'cpf',
  cpfRepresentanteLegal: 'cpfRepresentanteLegal',
  beneficio: 'beneficio',
  resultado: 'resultado',
  statusConsulta: 'statusConsulta',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.HistoricocreditoScalarFieldEnum = {
  id: 'id',
  clienteId: 'clienteId',
  tipoOperacao: 'tipoOperacao',
  quantidade: 'quantidade',
  createdAt: 'createdAt',
  idServico: 'idServico'
};

exports.Prisma.In100ScalarFieldEnum = {
  id: 'id',
  idUsuario: 'idUsuario',
  idConsulta: 'idConsulta',
  idConsultaOffline: 'idConsultaOffline',
  cpf: 'cpf',
  numeroBeneficio: 'numeroBeneficio',
  situacao: 'situacao',
  requisicao: 'requisicao',
  errorID: 'errorID',
  resultado: 'resultado',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  cpfRepresentanteLegal: 'cpfRepresentanteLegal',
  idFornecedor: 'idFornecedor',
  idStatusSolicitacaoIn100: 'idStatusSolicitacaoIn100',
  msgErro: 'msgErro'
};

exports.Prisma.LoginsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  user_name: 'user_name',
  active: 'active',
  password: 'password',
  idperfil: 'idperfil',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  cpf: 'cpf',
  email: 'email',
  telefone: 'telefone',
  usuarioAPi: 'usuarioAPi',
  chaveApi: 'chaveApi'
};

exports.Prisma.MenuScalarFieldEnum = {
  id: 'id',
  codsequencia: 'codsequencia',
  descricao: 'descricao',
  pagina: 'pagina',
  rota: 'rota',
  idmodulo: 'idmodulo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  icone: 'icone'
};

exports.Prisma.ModulosScalarFieldEnum = {
  id: 'id',
  desc_modulo: 'desc_modulo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Perfil_moduloScalarFieldEnum = {
  id: 'id',
  idperfil: 'idperfil',
  idmodulo: 'idmodulo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PerfilusuarioScalarFieldEnum = {
  id: 'id',
  descricao: 'descricao'
};

exports.Prisma.SenhasScalarFieldEnum = {
  id: 'id',
  idusuario: 'idusuario',
  senha: 'senha',
  idretorno: 'idretorno',
  observacao: 'observacao',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  cpf: 'cpf',
  idusuario_atualizacao: 'idusuario_atualizacao'
};

exports.Prisma.SituacaoScalarFieldEnum = {
  id: 'id',
  descricao: 'descricao',
  icone: 'icone',
  cor: 'cor',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  formsolicitar: 'formsolicitar'
};

exports.Prisma.SituacaosolicsenhaScalarFieldEnum = {
  id: 'id',
  descricao: 'descricao',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  telaSolicitar: 'telaSolicitar',
  telaAtualizar: 'telaAtualizar'
};

exports.Prisma.StatussolicitacaoservicoScalarFieldEnum = {
  id: 'id',
  codigo: 'codigo',
  descricao: 'descricao',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TiposervicoScalarFieldEnum = {
  id: 'id',
  descricao: 'descricao',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  valorCusto: 'valorCusto',
  valorVenda: 'valorVenda',
  ativo: 'ativo',
  observacao: 'observacao',
  usuario_cad: 'usuario_cad',
  usuario_alt: 'usuario_alt',
  idfornecedor: 'idfornecedor'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.bancosOrderByRelevanceFieldEnum = {
  instituicao: 'instituicao',
  segmento: 'segmento'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.configuracaoOrderByRelevanceFieldEnum = {
  descricao: 'descricao'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.consultasOrderByRelevanceFieldEnum = {
  beneficio: 'beneficio',
  cpf: 'cpf',
  observacao: 'observacao',
  matricula_siape: 'matricula_siape'
};

exports.Prisma.consultasofflineOrderByRelevanceFieldEnum = {
  erroID: 'erroID',
  situacao: 'situacao'
};

exports.Prisma.consultasofflinesiapeOrderByRelevanceFieldEnum = {
  situacao: 'situacao',
  erroID: 'erroID'
};

exports.Prisma.desbloqueiosOrderByRelevanceFieldEnum = {
  beneficio: 'beneficio',
  cpf: 'cpf',
  protocolo: 'protocolo',
  requerente: 'requerente',
  unidade: 'unidade',
  ddb: 'ddb'
};

exports.Prisma.entrantesinssOrderByRelevanceFieldEnum = {
  cpf: 'cpf',
  nome: 'nome',
  cidade: 'cidade',
  uf: 'uf',
  bairro: 'bairro',
  cep: 'cep',
  fone: 'fone',
  fone1: 'fone1',
  fone2: 'fone2',
  fone3: 'fone3',
  fone4: 'fone4',
  fone5: 'fone5',
  fone6: 'fone6',
  fone7: 'fone7',
  fone8: 'fone8',
  fone9: 'fone9',
  email: 'email'
};

exports.Prisma.especiebeneficioOrderByRelevanceFieldEnum = {
  descEspecieBeneficio: 'descEspecieBeneficio',
  gruposEspecie: 'gruposEspecie'
};

exports.Prisma.extratoofflineOrderByRelevanceFieldEnum = {
  cpf: 'cpf',
  beneficio: 'beneficio'
};

exports.Prisma.extratoonlineOrderByRelevanceFieldEnum = {
  beneficio: 'beneficio',
  errorResult: 'errorResult'
};

exports.Prisma.fornecedorOrderByRelevanceFieldEnum = {
  descricao: 'descricao',
  cnpj: 'cnpj',
  logradouro: 'logradouro',
  complemento: 'complemento',
  cep: 'cep',
  cidade: 'cidade',
  estado: 'estado',
  apikey: 'apikey',
  urlapi: 'urlapi',
  usuarioApi: 'usuarioApi',
  senhaApi: 'senhaApi'
};

exports.Prisma.historicoconsultaapiOrderByRelevanceFieldEnum = {
  cpf: 'cpf',
  cpfRepresentanteLegal: 'cpfRepresentanteLegal',
  beneficio: 'beneficio'
};

exports.Prisma.in100OrderByRelevanceFieldEnum = {
  cpf: 'cpf',
  numeroBeneficio: 'numeroBeneficio',
  situacao: 'situacao',
  errorID: 'errorID',
  cpfRepresentanteLegal: 'cpfRepresentanteLegal',
  msgErro: 'msgErro'
};

exports.Prisma.loginsOrderByRelevanceFieldEnum = {
  name: 'name',
  user_name: 'user_name',
  password: 'password',
  cpf: 'cpf',
  email: 'email',
  telefone: 'telefone',
  chaveApi: 'chaveApi'
};

exports.Prisma.menuOrderByRelevanceFieldEnum = {
  descricao: 'descricao',
  pagina: 'pagina',
  rota: 'rota',
  icone: 'icone'
};

exports.Prisma.modulosOrderByRelevanceFieldEnum = {
  desc_modulo: 'desc_modulo'
};

exports.Prisma.perfilusuarioOrderByRelevanceFieldEnum = {
  descricao: 'descricao'
};

exports.Prisma.senhasOrderByRelevanceFieldEnum = {
  senha: 'senha',
  observacao: 'observacao',
  cpf: 'cpf'
};

exports.Prisma.situacaoOrderByRelevanceFieldEnum = {
  descricao: 'descricao',
  icone: 'icone',
  cor: 'cor'
};

exports.Prisma.situacaosolicsenhaOrderByRelevanceFieldEnum = {
  descricao: 'descricao'
};

exports.Prisma.statussolicitacaoservicoOrderByRelevanceFieldEnum = {
  descricao: 'descricao'
};

exports.Prisma.tiposervicoOrderByRelevanceFieldEnum = {
  descricao: 'descricao',
  observacao: 'observacao'
};


exports.Prisma.ModelName = {
  bancos: 'bancos',
  configuracao: 'configuracao',
  consultas: 'consultas',
  consultasoffline: 'consultasoffline',
  consultasofflinesiape: 'consultasofflinesiape',
  credito: 'credito',
  desbloqueios: 'desbloqueios',
  entrantesinss: 'entrantesinss',
  especiebeneficio: 'especiebeneficio',
  extratooffline: 'extratooffline',
  extratoonline: 'extratoonline',
  fornecedor: 'fornecedor',
  fornecedorservico: 'fornecedorservico',
  historicoconsultaapi: 'historicoconsultaapi',
  historicocredito: 'historicocredito',
  in100: 'in100',
  logins: 'logins',
  menu: 'menu',
  modulos: 'modulos',
  perfil_modulo: 'perfil_modulo',
  perfilusuario: 'perfilusuario',
  senhas: 'senhas',
  situacao: 'situacao',
  situacaosolicsenha: 'situacaosolicsenha',
  statussolicitacaoservico: 'statussolicitacaoservico',
  tiposervico: 'tiposervico'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
